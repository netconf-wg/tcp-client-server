<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->
<rfc category="std" docName="draft-ietf-netconf-tcp-client-server-latest"
     ipr="trust200902">
  <front>
    <title abbrev="Groupings for TCP Clients and Servers">YANG Groupings for
    TCP Clients and TCP Servers</title>
    <author fullname="Kent Watsen" initials="K." surname="Watsen">
      <organization>Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>
    <author fullname="Michael Scharf" initials="M." surname="Scharf">
      <organization abbrev="Hochschule Esslingen">
        Hochschule Esslingen - University of Applied Sciences
      </organization>
      <address>
        <email>michael.scharf@hs-esslingen.de</email>
      </address>
    </author>
    <date/>
    <area>Operations</area>
    <workgroup>NETCONF Working Group</workgroup>

    <abstract>
      <t>This document defines three YANG modules: the first defines a grouping
        for configuring a generic TCP client, the second defines a grouping
        for configuring a generic TCP server, and the third defines a grouping
        common to the TCP clients and TCP servers.</t>
    </abstract>

    <note title="Editorial Note (To be removed by RFC Editor)">
      <t>This draft contains many placeholder values that need to be replaced
      with finalized values at the time of publication. This note summarizes
      all of the substitutions that are needed. No other RFC Editor
      instructions are specified elsewhere in this document.</t>

      <t>Artwork in this document contains placeholder values for the date of
      publication of this draft. Please apply the following replacement: <list
          style="symbols">
          <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication
          date of this draft</t>
        </list></t>

      <t>The following Appendix section is to be removed prior to publication:
      <list style="symbols">
          <t>Appendix A. Change Log</t>
        </list></t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document defines three YANG 1.1 <xref target="RFC7950"/> modules:
        the first defines a grouping for configuring a generic TCP client, 
        the second defines a grouping for configuring a generic TCP server,
        and the third defines a grouping common to the TCP clients and TCP
        servers.</t>
        <t>It is intended that these groupings will be used either standalone,
        for TCP-based protocols, as part of a stack of protocol-specific
        configuration models.  For instance, these groupings could help define
        the configuration module for SSH, TLS, or HTTP based applications.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
      they appear in all capitals, as shown here.</t>
    </section>

    <section anchor="tcp-common-model" title="The TCP Common Model">
      <section title="Model Scope">
        <t>This document defines a common "grouping" statement for basic TCP connection
          parameters that matter to applications. In some TCP stacks, such parameters
          can also directly be set by an application using system calls, such as the
          socket API. The base YANG model in this document focuses on modeling TCP
          keep-alives. This base model can be extended as needed.</t>
      </section>
      <section title="Usage Guidelines for Configuring TCP Keep-Alives">
        <t>Network stacks may include "keep-alives" in their TCP implementations,
          although this practice is not universally accepted. If keep-alives are
          included, [RFC1122] [RFC793bis] mandates that the application MUST be
          able to turn them on or off for each TCP connection, and that they MUST
          default to off.</t>
        <t>Keep-alive mechanisms exist in many protocols. Depending on the protocol
          stack, TCP keep-alives may only be one out of several alternatives. Which
          mechanism to use depends on the use case and application requirements. If
          keep-alives are needed by an application, it is RECOMMENDED that the
          aliveness check happens at the highest protocol layer possible that is
          meaningful to the application, in order to maximize the depth of the
          aliveness check.</t>
        <t>[[TODO: Further guidance on keep-alives is provided in draft-xyz-tsvwg-... ]]</t>
        <t>A TCP keep-alive mechanism should only be invoked in server applications
          that might otherwise hang indefinitely and consume resources unnecessarily
          if a client crashes or aborts a connection during a network failure [RFC1122].
          TCP keep-alives may consume significant resources both in the network and
          in endpoints (e.g., battery power).  In addition, frequent keep-alives
          risk network congestion. The higher the frequency of keep-alives, the
          higher the overhead.</t>
        <t>
          Given the cost of keep-alives, parameters have to be configured carefully:
          <list style="symbols">
            <t>The default idle interval (leaf "idle-time") MUST default to no less
              than two hours, i.e., 7200 seconds [RFC1122]. A lower value MAY be
              configured, but keep-alive messages SHOULD NOT be transmitted more
              frequently than once every 15 seconds. Longer intervals SHOULD be
              used when possible.</t>
            <t>The maximum number of sequential keep-alive probes that can fail
              (leaf "max-probes") trades off responsiveness and robustness against
              packet loss. ACK segments that contain no data are not reliably
              transmitted by TCP. Consequently, if a keep-alive mechanism is
              implemented it MUST NOT interpret failure to respond to any
              specific probe as a dead connection [RFC1122]. Typically a
              single-digit number should suffice.</t>
            <t>TCP implementations may include a parameter for the number of
              seconds between TCP keep-alive probes (leaf "probe-interval"). In
              order to avoid congestion, the time interval between probes MUST NOT
              be smaller than one second. Significantly longer intervals SHOULD be
              used. It is important to note that keep-alive probes (or replies)
              can get dropped due to network congestion. Sending further probe
              messages into a congested path after a short interval, without
              backing off timers, could cause harm and result in a congestion
              collapse.  Therefore it is essential to pick a large, conservative
              value for this interval.</t>
          </list>
        </t>
      </section>
      <section title="Tree Diagram">
        <t>This section provides a tree diagram <xref target="RFC8340"/> for
        the "ietf-tcp-common" module.</t>

        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-tcp-common-tree.txt)
]]></artwork>
          </figure></t>
      </section>

      <section title="Example Usage">
        <t>This section presents an example showing the tcp-common-grouping
        populated with some data.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-tcp-common.xml)
]]></artwork>
          </figure></t>
      </section>

      <section anchor="tcp-common-yang-module" title="YANG Module">
        <t>The ietf-tcp-common YANG module references <xref target="RFC6991"/>.</t>
        <t><figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-tcp-common@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-tcp-common@YYYY-MM-DD.yang)
]]></artwork>
        <postamble>&lt;CODE ENDS&gt;</postamble>
        </figure></t>
      </section>
    </section>
    <section anchor="tcp-client-model" title="The TCP Client Model">
      <section title="Tree Diagram">
        <t>This section provides a tree diagram <xref target="RFC8340"/> for
        the "ietf-tcp-client" module.</t>

        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-tcp-client-tree.txt)
]]></artwork>
          </figure></t>
      </section>

      <section title="Example Usage">
        <t>This section presents an example showing the tcp-client-grouping
        populated with some data.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-tcp-client.xml)
]]></artwork>
          </figure></t>
      </section>

      <section anchor="tcp-client-yang-module" title="YANG Module">
        <t>The ietf-tcp-client YANG module references <xref target="RFC6991"/>.</t>
        <t><figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-tcp-client@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-tcp-client@YYYY-MM-DD.yang,71)
]]></artwork>
            <postamble>&lt;CODE ENDS&gt;</postamble>
          </figure></t>
      </section>
    </section>

    <section anchor="tcp-server-model" title="The TCP Server Model">
      <section title="Tree Diagram">
        <t>This section provides a tree diagram <xref target="RFC8340"/> for
        the "ietf-tcp-server" module.</t>

        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-tcp-server-tree.txt)
]]></artwork>
          </figure></t>
      </section>

      <section title="Example Usage">
        <t>This section presents an example showing the tcp-server-grouping
        populated with some data.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-tcp-server.xml)
]]></artwork>
          </figure></t>
      </section>

      <section anchor="tcp-server-yang-module" title="YANG Module">
        <t>The ietf-tcp-server YANG module references <xref target="RFC6991"/>.</t>
        <t>
          <figure>
            <preamble>&lt;CODE BEGINS&gt; file "ietf-tcp-server@YYYY-MM-DD.yang"</preamble>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-tcp-server@YYYY-MM-DD.yang)
]]></artwork>
          <postamble>&lt;CODE ENDS&gt;</postamble>
        </figure></t>
      </section>
    </section>


    <section title="Security Considerations">
      <t>The YANG modules defined in this document are designed to be accessed
      via YANG based management protocols, such as NETCONF <xref
      target="RFC6241"/> and RESTCONF <xref target="RFC8040"/>. Both of these
      protocols have mandatory-to-implement secure transport layers (e.g.,
      SSH, TCP) with mutual authentication.</t>

      <t>The NETCONF access control model (NACM) <xref target="RFC8341"/>
      provides the means to restrict access for particular users to a
      pre-configured subset of all available protocol operations and
      content.</t>

      <t>Since the modules defined in this document only define groupings,
      these considerations are primarily for the designers of other modules
      that use these groupings.</t>

      <t>There are a number of data nodes defined in the YANG modules that are
      writable/creatable/deletable (i.e., config true, which is the default).
      These data nodes may be considered sensitive or vulnerable in some
      network environments. Write operations (e.g., edit-config) to these data
      nodes without proper protection can have a negative effect on network
      operations. These are the subtrees and data nodes and their
      sensitivity/vulnerability:
        <list hangIndent="6" style="hanging">
          <t hangText="   None of the writable/creatable/deletable data nodes
            in the YANG modules defined in this document are considered more
            sensitive or vulnerable then standard configuration."/>
        </list>
      </t>

      <t>Some of the readable data nodes in the YANG modules may be considered
      sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or
      notification) to these data nodes. These are the subtrees and data nodes
      and their sensitivity/vulnerability:
        <list hangIndent="6" style="hanging">
          <t hangText="   None of the readable data nodes in the YANG modules
            defined in this document are considered more sensitive or vulnerable
            then standard configuration."/>
        </list>
      </t>

      <t>This document does not define any RPC actions and hence this section
      does not consider the security of RPCs.</t> 
    </section>

    <section title="IANA Considerations">
      <section title="The IETF XML Registry">
        <t>This document registers two URIs in the "ns" subregistry of the
        IETF XML Registry <xref target="RFC3688"/>. Following the format in
        <xref target="RFC3688"/>, the following registrations are
        requested:</t>
        <t><figure>
            <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-tcp-client
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-tcp-server
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.
</artwork>
          </figure></t>
      </section>

      <section title="The YANG Module Names Registry">
        <t>This document registers two YANG modules in the YANG Module Names
        registry <xref target="RFC6020"/>. Following the format in <xref
        target="RFC6020"/>, the following registrations are requested:</t>
        <t><figure>
            <artwork>
   name:         ietf-tcp-common
   namespace:    urn:ietf:params:xml:ns:yang:ietf-tcp-common
   prefix:       tcpcmn
   reference:    RFC XXXX

   name:         ietf-tcp-client
   namespace:    urn:ietf:params:xml:ns:yang:ietf-tcp-client
   prefix:       tcpc
   reference:    RFC XXXX

   name:         ietf-tcp-server
   namespace:    urn:ietf:params:xml:ns:yang:ietf-tcp-server
   prefix:       tcps
   reference:    RFC XXXX
</artwork>
          </figure></t>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.6020.xml"?>
      <?rfc include="reference.RFC.6991.xml"?>
      <?rfc include="reference.RFC.7950.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>
      <?rfc include="reference.RFC.8341.xml"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.3688.xml"?>
      <?rfc include="reference.RFC.6241.xml"?>
      <?rfc include="reference.RFC.8040.xml"?>
      <?rfc include="reference.RFC.8340.xml"?>
    </references>

    <section title="Change Log">
      <section title="00 to 01">
        <t>
          <list style="symbols">
            <t>Added 'local-binding-supported' feature to TCP-client model.</t>
            <t>Added 'keepalives-supported' feature to TCP-common model.</t>
            <t>Added 'external-endpoint-values' container and 'external-endpoints' feature to TCP-server model.</t>
          </list>
        </t>
      </section>
      <section title="01 to 02">
        <t>
          <list style="symbols">
            <t>Removed the 'external-endpoint-values' container and 'external-endpoints' feature from the TCP-server model.</t>
          </list>
        </t>
      </section>
      <section title="02 to 03">
        <t>
          <list style="symbols">
            <t>Moved the common model section to be before the client and server specific sections.</t>
            <t>Added sections "Model Scope" and "Usage Guidelines for Configuring TCP Keep-Alives" to
              the common model section.</t>
          </list>
        </t>
      </section>
    </section>

    <!--
    <section numbered="no" title="Acknowledgements">
      <t>The authors would like to thank for following for lively discussions
        on list and in the halls (ordered by last name):
          TBD
      </t>
    </section>
-->

  </back>
</rfc>
